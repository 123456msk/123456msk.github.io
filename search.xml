<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/12/23/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
      <url>/2023/12/23/%E5%8D%95%E7%89%87%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<p>cover: &#x2F;img&#x2F;1.png<br>title: 单片机<br>categories: 单片机<br>tags: 单片机</p><h1 id="跑马灯"><a href="#跑马灯" class="headerlink" title="跑马灯"></a>跑马灯</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;mega16.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;delay.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 控制LED动画的函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">led</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> i = <span class="number">0</span>, j = (i + <span class="number">6</span>) % <span class="number">7</span> + <span class="number">1</span>; <span class="comment">// 初始化LED位置的变量</span></span><br><span class="line">    PORTB = <span class="number">0xFF</span>; <span class="comment">// 将所有PORTB引脚设为高电平（LED初始关闭状态）</span></span><br><span class="line">    DDRB = <span class="number">0xFF</span>;  <span class="comment">// 将所有PORTB引脚设为输出，用于连接LED</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="comment">// 切换在位置i和j的LED状态（二进制取反）</span></span><br><span class="line">        PORTB = ~(<span class="number">1</span> &lt;&lt; i) &amp; ~(<span class="number">1</span> &lt;&lt; j);</span><br><span class="line">        <span class="built_in">delay_ms</span>(<span class="number">100</span>); <span class="comment">// 延时100毫秒</span></span><br><span class="line">        <span class="keyword">if</span>(++i &gt; <span class="number">7</span>) i = <span class="number">0</span>; <span class="comment">// 如果i超过7，则将i加1并重置为0</span></span><br><span class="line">        <span class="keyword">if</span>(++j &gt; <span class="number">7</span>) j = <span class="number">0</span>; <span class="comment">// 如果j超过7，则将j加1并重置为0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">led</span>(); <span class="comment">// 调用LED动画函数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="数码管显示时间"><a href="#数码管显示时间" class="headerlink" title="数码管显示时间"></a>数码管显示时间</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;delay.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;mega16.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">flash <span class="type">char</span> led_7[<span class="number">10</span>] = &#123;<span class="number">0x3F</span>, <span class="number">0x06</span>, <span class="number">0x5B</span>, <span class="number">0x4F</span>, <span class="number">0x66</span>, <span class="number">0x6D</span>, <span class="number">0x7D</span>, <span class="number">0x07</span>, <span class="number">0x7F</span>, <span class="number">0x6F</span>&#125;;</span><br><span class="line">flash <span class="type">char</span> position[<span class="number">4</span>] = &#123;<span class="number">0b00000000</span>, <span class="number">0b01000000</span>, <span class="number">0b00100000</span>, <span class="number">0b00010000</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> time[<span class="number">2</span>];       <span class="comment">// 时、分、秒计数</span></span><br><span class="line"><span class="type">char</span> dis_buff[<span class="number">4</span>];  <span class="comment">// 显示缓冲区，存放要显示的 6 个字符的段码值</span></span><br><span class="line"><span class="type">char</span> time_counter; <span class="comment">// 1 秒计数器</span></span><br><span class="line">bit point_on;       <span class="comment">// 秒显示标志</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">display</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">// 扫描显示函数，执行时间 12ms</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i ++)&#123;</span><br><span class="line">        PORTC = led_7[dis_buff[i]];</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">0</span>)&#123;</span><br><span class="line">            PORTA<span class="number">.6</span> = <span class="number">1</span>;</span><br><span class="line">            PORTD = <span class="number">0</span>; </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            PORTD = position[i];</span><br><span class="line">            PORTA<span class="number">.6</span> = <span class="number">0</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">delay_ms</span>(<span class="number">2</span>);  </span><br><span class="line">        PORTC = <span class="number">0xFF</span>;</span><br><span class="line">        PORTD = <span class="number">0</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">time_to_disbuffer</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">// 时间值送显示缓冲区函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> i, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        dis_buff[j++] = time[i] % <span class="number">10</span>;</span><br><span class="line">        dis_buff[j++] = time[i] / <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    PORTC = <span class="number">0xFF</span>; </span><br><span class="line">    DDRC = <span class="number">0xFF</span>;</span><br><span class="line">    </span><br><span class="line">    PORTD = <span class="number">0</span>; </span><br><span class="line">    PORTA<span class="number">.6</span> = <span class="number">0</span>;</span><br><span class="line">    DDRD =  <span class="number">0b01110000</span>; </span><br><span class="line">    DDRA<span class="number">.6</span> = <span class="number">1</span>;</span><br><span class="line">    time[<span class="number">1</span>] = <span class="number">15</span>;   <span class="comment">// 初始化秒数</span></span><br><span class="line">    time[<span class="number">0</span>] = <span class="number">51</span>;   <span class="comment">// 初始化分钟数</span></span><br><span class="line">    <span class="built_in">time_to_disbuffer</span>();  <span class="comment">// 初始化显示缓冲区</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">display</span>(); <span class="comment">// 调用显示函数</span></span><br><span class="line">        <span class="keyword">if</span> (++time_counter &gt;= <span class="number">40</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            time_counter = <span class="number">0</span>;      <span class="comment">// 重置计数器</span></span><br><span class="line">            point_on = ~point_on;  <span class="comment">// 切换秒显示标志</span></span><br><span class="line">            <span class="keyword">if</span> (++time[<span class="number">0</span>] &gt;= <span class="number">60</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                time[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span> (++time[<span class="number">1</span>] &gt;= <span class="number">60</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    time[<span class="number">1</span>] = <span class="number">0</span>;  <span class="comment">// 重置分钟数</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">time_to_disbuffer</span>();  <span class="comment">// 将时间值送显示缓冲区</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">delay_ms</span>(<span class="number">13</span>); <span class="comment">// 延时13毫秒</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="按键"><a href="#按键" class="headerlink" title="按键"></a>按键</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;mega16.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uint  unsigned int</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED  PORTB0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED0 PORTB1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED1 PORTD4</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED2 PORTD5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED3 PORTD6</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED4 PORTA6</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Dataport PORTC</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED_Data  PORTB</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S1 PIOD2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S2 PIOD0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S3 PIOD3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S4 PIOD1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S5 PIOA7</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">uchar keyValue;</span><br><span class="line">bit point_on = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">flash <span class="type">char</span> led_7[<span class="number">10</span>] = &#123;<span class="number">0x3F</span>, <span class="number">0x06</span>, <span class="number">0x5B</span>, <span class="number">0x4F</span>, <span class="number">0x66</span>, <span class="number">0x6D</span>, <span class="number">0x7D</span>, <span class="number">0x07</span>, <span class="number">0x7F</span>, <span class="number">0x6F</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">delay</span><span class="params">(uint time)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    uint i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; time; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">30</span>; j++);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">IO_init</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DDRB = <span class="number">0xFF</span>;</span><br><span class="line">    PORTB = <span class="number">0xFF</span>;</span><br><span class="line">    DDRD = <span class="number">0x00</span>;</span><br><span class="line">    PORTD = <span class="number">0xFF</span>;</span><br><span class="line">    DDRA = <span class="number">0xFF</span>;</span><br><span class="line">    PORTA = <span class="number">0xFF</span>;</span><br><span class="line">    DDRC = <span class="number">0xFF</span>;</span><br><span class="line">    PORTC = <span class="number">0x00</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">led_init</span><span class="params">()</span></span>&#123;</span><br><span class="line">   PORTD<span class="number">.4</span>=<span class="number">0</span>;</span><br><span class="line">   PORTD<span class="number">.5</span>=<span class="number">0</span>;</span><br><span class="line">   PORTD<span class="number">.6</span>=<span class="number">0</span>;</span><br><span class="line">   PORTA<span class="number">.6</span>=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">keyScan</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    uchar x, y;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置PORTD的低2位为输出，高2位为输入</span></span><br><span class="line">    DDRD = <span class="number">0x03</span>;</span><br><span class="line">    <span class="comment">// 设置PORTD的高2位为高电平，作为输入的上拉电阻</span></span><br><span class="line">    PORTD = <span class="number">0x0C</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查是否有按键被按下（高2位不为高电平）</span></span><br><span class="line">    <span class="keyword">if</span> ((PIND &amp; <span class="number">0x0C</span>) != <span class="number">0x0C</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 引入延迟以去抖动按键</span></span><br><span class="line">        <span class="built_in">delay</span>(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 再次检查是否有按键被按下</span></span><br><span class="line">        <span class="keyword">if</span> ((PIND &amp; <span class="number">0x0C</span>) != <span class="number">0x0C</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 读取PIND的高2位状态（x）</span></span><br><span class="line">            x = (PIND &amp; <span class="number">0x0C</span>);</span><br><span class="line">            <span class="comment">// 将DDRD的高2位更改为输出</span></span><br><span class="line">            DDRD = <span class="number">0x0C</span>;</span><br><span class="line">            <span class="comment">// 将PORTD的高2位更改为输入</span></span><br><span class="line">            PORTD = <span class="number">0x03</span>;</span><br><span class="line">            <span class="comment">// 再次引入延迟</span></span><br><span class="line">            <span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">            <span class="comment">// 读取PIND的低2位状态（y）</span></span><br><span class="line">            y = (PIND &amp; <span class="number">0x03</span>);</span><br><span class="line">            <span class="comment">// 将x和y组合以获取按下的按键值</span></span><br><span class="line">            keyValue = x | y;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 等待按键释放</span></span><br><span class="line">            <span class="keyword">while</span> ((PIND &amp; <span class="number">0x03</span>) != <span class="number">0x03</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">keyHandle</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(keyValue)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0x06</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            PORTB = <span class="number">0xfe</span>;</span><br><span class="line">            <span class="built_in">led_init</span>();</span><br><span class="line">            PORTD<span class="number">.4</span> = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0x0a</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            PORTB = <span class="number">0xfd</span>;</span><br><span class="line">            <span class="built_in">led_init</span>();</span><br><span class="line">            PORTD<span class="number">.5</span> = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0x05</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            PORTB = <span class="number">0xfb</span>;</span><br><span class="line">            <span class="built_in">led_init</span>();</span><br><span class="line">            PORTD<span class="number">.6</span> = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0x09</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            PORTB = <span class="number">0xf7</span>;</span><br><span class="line">            <span class="built_in">led_init</span>();</span><br><span class="line">            PORTA<span class="number">.6</span> = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">timer0_init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    TCCR0 |= (<span class="number">1</span> &lt;&lt; WGM01); <span class="comment">// 设置为CTC模式</span></span><br><span class="line">    OCR0 = <span class="number">125</span>; <span class="comment">// 比较匹配值，使得定时器溢出时间为5000us</span></span><br><span class="line">    TIMSK |= (<span class="number">1</span> &lt;&lt; OCIE0); <span class="comment">// 启用定时器0中断</span></span><br><span class="line">    TCCR0 |= (<span class="number">1</span> &lt;&lt; CS02); <span class="comment">// 设置分频器为256，启动定时器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">IO_init</span>();</span><br><span class="line">    <span class="built_in">led_init</span>();</span><br><span class="line">    <span class="built_in">timer0_init</span>();</span><br><span class="line">    <span class="meta">#asm(<span class="string">&quot;sei&quot;</span>) <span class="comment">// 允许全局中断</span></span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;   </span><br><span class="line">        <span class="comment">// 根据标志位控制数码管点亮</span></span><br><span class="line">        <span class="keyword">if</span>(point_on)PORTC = led_7[i] | <span class="number">0x80</span>;</span><br><span class="line">        <span class="keyword">else</span> PORTC = led_7[i];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">keyScan</span>();</span><br><span class="line">        <span class="built_in">keyHandle</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(++ i &gt;= <span class="number">10</span>) i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">delay</span>(<span class="number">5000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">interrupt [TIM0_COMP] <span class="function"><span class="type">void</span> <span class="title">timer0_ISR</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">keyScan</span>(); <span class="comment">// 按键扫描</span></span><br><span class="line">    <span class="built_in">keyHandle</span>(); <span class="comment">// 按键处理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="显示电压值"><a href="#显示电压值" class="headerlink" title="显示电压值"></a>显示电压值</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;mega16.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;delay.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">flash <span class="type">char</span> led_7[<span class="number">10</span>] = &#123;<span class="number">0x3F</span>, <span class="number">0x06</span>, <span class="number">0x5B</span>, <span class="number">0x4F</span>, <span class="number">0x66</span>, <span class="number">0x6D</span>, <span class="number">0x7D</span>, <span class="number">0x07</span>, <span class="number">0x7F</span>, <span class="number">0x6F</span>&#125;;</span><br><span class="line">flash <span class="type">char</span> position[<span class="number">4</span>] = &#123;<span class="number">0b00000000</span>, <span class="number">0b01000000</span>, <span class="number">0b00100000</span>, <span class="number">0b00010000</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> dis_buff[<span class="number">4</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">bit time_2ms_ok;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ADC 电压值送显示缓冲区函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">adc_to_disbuffer</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> adc)</span>             </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        dis_buff[i] = adc % <span class="number">10</span>;</span><br><span class="line">        adc /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">display</span><span class="params">(<span class="type">void</span>)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i ++)&#123;</span><br><span class="line">        PORTC = led_7[dis_buff[i]];</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">0</span>)&#123;</span><br><span class="line">            PORTA<span class="number">.6</span> = <span class="number">1</span>;</span><br><span class="line">            PORTD = <span class="number">0</span>; </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            PORTD = position[i];</span><br><span class="line">            PORTA<span class="number">.6</span> = <span class="number">0</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">delay_ms</span>(<span class="number">2</span>);  </span><br><span class="line">        PORTC = <span class="number">0xFF</span>;</span><br><span class="line">        PORTD = <span class="number">0</span>; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Timer 0 比较匹配中断服务</span></span><br><span class="line">interrupt[TIM0_COMP] <span class="function"><span class="type">void</span> <span class="title">timer0_comp_isr</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    time_2ms_ok = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ADC 转换完成中断服务</span></span><br><span class="line">interrupt[ADC_INT] <span class="function"><span class="type">void</span> <span class="title">adc_isr</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> adc_data, adc_v;</span><br><span class="line">    adc_data = ADCW;                               <span class="comment">// 读取 ADC 置换结果</span></span><br><span class="line">    adc_v = (<span class="type">unsigned</span> <span class="type">long</span>)adc_data * <span class="number">5000</span> / <span class="number">1024</span>; <span class="comment">// 换算成电压值</span></span><br><span class="line">    <span class="built_in">adc_to_disbuffer</span>(adc_v);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    PORTC = <span class="number">0xFF</span>; </span><br><span class="line">    DDRC = <span class="number">0xFF</span>;</span><br><span class="line">    </span><br><span class="line">    PORTD = <span class="number">0</span>; </span><br><span class="line">    PORTA<span class="number">.6</span> = <span class="number">0</span>;</span><br><span class="line">    DDRD =  <span class="number">0b01110000</span>; </span><br><span class="line">    DDRA<span class="number">.6</span> = <span class="number">1</span>;   </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// T/C0 初始化</span></span><br><span class="line">    TCCR0 = <span class="number">0x0B</span>; <span class="comment">// 内部时钟，64 分频（4M/64=62.5KHz），CTC 模式</span></span><br><span class="line">    TCNT0 = <span class="number">0x00</span>;</span><br><span class="line">    OCR0 = <span class="number">0x7C</span>;  <span class="comment">// OCR0 = 0x7C(124),(124+1)/62.5=2ms</span></span><br><span class="line">    TIMSK = <span class="number">0x02</span>; <span class="comment">// 允许 T/C0 比较中断</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// ADC 初始化</span></span><br><span class="line">    ADMUX = <span class="number">0x40</span>; <span class="comment">// 参考电源 AVcc、ADC0 单端输入</span></span><br><span class="line">    SFIOR &amp;= <span class="number">0x1F</span>;</span><br><span class="line">    SFIOR |= <span class="number">0x60</span>; <span class="comment">// 选择 T/C0 比较匹配中断为 ADC 触发源</span></span><br><span class="line">    ADCSRA = <span class="number">0xAD</span>; <span class="comment">// ADC 允许、自动触发转换、ADC 转换中断允许、ADCclk=125Kz</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#asm(<span class="string">&quot;sei&quot;</span>) </span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (time_2ms_ok)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">display</span>(); <span class="comment">// LED 扫描显示</span></span><br><span class="line">            time_2ms_ok = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;     </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基础2</title>
      <link href="/2023/12/21/%E5%9F%BA%E7%A1%802/"/>
      <url>/2023/12/21/%E5%9F%BA%E7%A1%802/</url>
      
        <content type="html"><![CDATA[<h1 id="喵喵教会的祭品"><a href="#喵喵教会的祭品" class="headerlink" title="喵喵教会的祭品"></a>喵喵教会的祭品</h1><h2 id="AC-code"><a href="#AC-code" class="headerlink" title="AC_code"></a>AC_code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ull unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> size(v) ((int)v.size())</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(v) v.begin(), v.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> dx[] = &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;4396 = 28 x 157&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;5346 = 18 x 297&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;5346 = 27 x 198&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;5796 = 12 x 483&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;5796 = 42 x 138&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;6952 = 4 x 1738&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;7254 = 39 x 186&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;7632 = 48 x 159&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;7852 = 4 x 1963&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _; <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    _ = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Apples-Prologue-苹果和虫子"><a href="#Apples-Prologue-苹果和虫子" class="headerlink" title="Apples Prologue &#x2F; 苹果和虫子"></a>Apples Prologue &#x2F; 苹果和虫子</h1><h2 id="AC-code-1"><a href="#AC-code-1" class="headerlink" title="AC_code"></a>AC_code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ull unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> size(v) ((int)v.size())</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(v) v.begin(), v.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> dx[] = &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> m,t,s;</span><br><span class="line">    cin &gt;&gt; m &gt;&gt; t &gt;&gt; s;</span><br><span class="line">    <span class="keyword">if</span>(t)&#123;</span><br><span class="line">        <span class="type">int</span> c = <span class="built_in">ceil</span>(s * <span class="number">1.0</span> / t);</span><br><span class="line">        <span class="keyword">if</span>(m &lt; c) cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; m - c &lt;&lt; endl;</span><br><span class="line">    &#125;<span class="keyword">else</span> cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _; <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    _ = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="杨辉三角"><a href="#杨辉三角" class="headerlink" title="杨辉三角"></a>杨辉三角</h1><h2 id="AC-code-2"><a href="#AC-code-2" class="headerlink" title="AC_code"></a>AC_code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ull unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> size(v) ((int)v.size())</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(v) v.begin(), v.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> dx[] = &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    f[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= i;j ++)&#123;</span><br><span class="line">            f[i][j] = f[i - <span class="number">1</span>][j - <span class="number">1</span>] + f[i - <span class="number">1</span>][j];</span><br><span class="line">            cout &lt;&lt; f[i][j] &lt;&lt; <span class="string">&quot; \n&quot;</span>[i == j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _; <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    _ = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="计算阶乘"><a href="#计算阶乘" class="headerlink" title="计算阶乘"></a>计算阶乘</h1><h2 id="AC-code-3"><a href="#AC-code-3" class="headerlink" title="AC_code"></a>AC_code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ull unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> size(v) ((int)v.size())</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(v) v.begin(), v.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> dx[] = &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    f[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i ++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= i;j ++)&#123;</span><br><span class="line">            f[i][j] = f[i - <span class="number">1</span>][j - <span class="number">1</span>] + f[i - <span class="number">1</span>][j];</span><br><span class="line">            cout &lt;&lt; f[i][j] &lt;&lt; <span class="string">&quot; \n&quot;</span>[i == j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _; <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    _ = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="青蛙爬井"><a href="#青蛙爬井" class="headerlink" title="青蛙爬井"></a>青蛙爬井</h1><h2 id="AC-code-4"><a href="#AC-code-4" class="headerlink" title="AC_code"></a>AC_code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ull unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> size(v) ((int)v.size())</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(v) v.begin(),v.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> dx[] = &#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,dy[] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> h,u,d,cnt = <span class="number">0</span>,now = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; h &gt;&gt; u  &gt;&gt; d;</span><br><span class="line">    <span class="keyword">while</span>(now &lt; h)&#123;</span><br><span class="line">        cnt ++;</span><br><span class="line">        now += u;</span><br><span class="line">        <span class="keyword">if</span>(now &gt;= h) <span class="keyword">break</span>;</span><br><span class="line">        now -= d;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>),cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _; <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    _ = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(_ --) <span class="built_in">solve</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="月份天数"><a href="#月份天数" class="headerlink" title="月份天数"></a>月份天数</h1><h2 id="AC-code-5"><a href="#AC-code-5" class="headerlink" title="AC_code"></a>AC_code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&#x27;\n&#x27;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ull unsigned long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> size(v) ((int)v.size())</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(v) v.begin(), v.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> dx[] = &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;, dy[] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> months[<span class="number">13</span>] = &#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> y,t;</span><br><span class="line">    cin &gt;&gt; y &gt;&gt; t;</span><br><span class="line">    <span class="keyword">if</span> ((y % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; y % <span class="number">100</span> != <span class="number">0</span>) || y % <span class="number">400</span> == <span class="number">0</span>) months[<span class="number">2</span>] = <span class="number">29</span>;</span><br><span class="line">    <span class="keyword">else</span> months[<span class="number">2</span>] = <span class="number">28</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; months[t] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>), cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> _; <span class="comment">// cin &gt;&gt; _;</span></span><br><span class="line">    _ = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (_--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥杯（学校） </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
